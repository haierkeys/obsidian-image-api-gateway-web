import i18n from "i18next"
import { initReactI18next } from "react-i18next"
import { getBrowserLang } from "@/lib/i18n/utils"

const translations = {
  en: {
    title: "User Login",
    subtitle: "Public Cloud Storage Interface Management",
    credentials: "Username (or Email)",
    username: "Username",
    password: "Password",
    remember: "Remember Me",
    forgotPassword: "Forgot Password?",
    login: "Login",
    loading: "Logging in...",
    credentialsPlaceholder: "Please enter username (or email)",
    usernamePlaceholder: "Please enter username",
    passwordPlaceholder: "Please enter password",
    register: "Register",
    registerTitle: "User Registration",
    registerSubtitle: "Create Your Account",
    confirmPassword: "Confirm Password",
    email: "Email",
    emailPlaceholder: "Please enter email",
    confirmPasswordPlaceholder: "Please confirm password",
    alreadyHaveAccount: "Already have an account?",
    registerButton: "Register",
    registering: "Registering...",
    backToLogin: "Back to Login",
    noAccount: "Don't have an account yet?",
    storageManagement: "Cloud Storage Settings Management",
    addStorage: "Add Cloud Storage",
    editStorage: "Edit Storage",
    name: "Name",
    type: "Type",
    region: "Region Region (S3)",
    bucket: "Bucket",
    endpoint: "Endpoint Endpoint (OSS)",
    endpointMinio: "Endpoint Endpoint (MinIO)",
    isDefault: "Default",
    actions: "Actions",
    setAsDefault: "Set as Default",
    selectStorageType: "Select Storage Type",
    save: "Save",
    add: "Add",
    confirmDelete: "Are you sure you want to delete this storage configuration?",
    ossName: "Aliyun OSS",
    s3Name: "Amazon S3",
    r2Name: "Cloudflare R2",
    minioName: "MinIO",
    localfsName: "Server Local Storage",
    webdavName: "WebDAV",
    accountId: "Account ID Account ID (R2)",
    bucketName: "Bucket Name",
    accessKeyId: "AccessKey ID",
    accessKeySecret: "AccessKey Secret",
    customPath: "Custom Save Path",
    accessUrlPrefix: "Access URL Prefix",
    webUser: "WebDAV Username",
    webPassword: "WebDAV Password",
    webUrl: "WebDAV Address",
    isEnabled: "Enabled",
    logout: "Logout",
    close: "Close",
    cancel: "Cancel",
    confirm: "Confirm",
    success: "Success",
    error: "Error",
    warning: "Warning",
    info: "Info",
    tableScrollsShowMore: "Hint: Scroll left and right in the table to show more, up to 100 items",
    copyConfig: "Copy API Configuration",
    copyConfigSuccess: "API configuration information has been copied to the clipboard. Please return to the Obsidian plugin to paste the configuration",
    copyConfigError: "Clipboard API is not available. Please copy manually and return to the Obsidian plugin to paste the configuration",
    credentialsRequired: "Username (or email) cannot be empty",
    passwordMinLength: "Password must be at least 6 characters long",
    usernameMinLength: "Username must be at least 3 characters long",
    emailInvalid: "Please enter a valid email address",
    passwordMismatch: "The two passwords entered do not match",
    oss: "OSS",
    s3: "S3",
    r2: "R2",
    minio: "MinIO",
    localfs: "Local",
    ossDesc: "Aliyun OSS cloud storage",
    s3Desc: "Amazon S3 cloud storage",
    r2Desc: "Cloudflare R2 cloud storage",
    minioDesc: "MinIO cloud storage",
    localfsDesc: "Server local storage",
    changePassword: "Change Password",
    currentPassword: "Current Password",
    newPassword: "New Password",
    confirmNewPassword: "Confirm New Password",
  },
  zh: {
    title: "用户登录",
    subtitle: "公共云存储接口管理",
    credentials: "用户名 ( 或 邮箱 )",
    username: "用户名",
    password: "密码",
    remember: "记住我",
    forgotPassword: "忘记密码？",
    login: "登录",
    loading: "登录中...",
    credentialsPlaceholder: "请输入用户名 ( 或 邮箱 )",
    usernamePlaceholder: "请输入用户名",
    passwordPlaceholder: "请输入密码",
    register: "注册",
    registerTitle: "用户注册",
    registerSubtitle: "创建您的账户",
    confirmPassword: "确认密码",
    email: "邮箱",
    emailPlaceholder: "请输入邮箱",
    confirmPasswordPlaceholder: "请确认密码",
    alreadyHaveAccount: "已有账户？",
    registerButton: "注册",
    registering: "注册中...",
    backToLogin: "返回登录",
    noAccount: "还没有账户？",
    storageManagement: "云存储设置管理",
    addStorage: "新增云存储",
    editStorage: "编辑存储",
    name: "名称",
    type: "类型",
    region: "区域 Region（S3）",
    bucket: "存储桶 Bucket",
    endpoint: "终端节点 Endpoint（OSS）",
    endpointMinio: "终端节点 Endpoint（MinIO）",
    isDefault: "默认",
    actions: "操作",
    setAsDefault: "设为默认",
    selectStorageType: "选择存储类型",
    save: "保存",
    add: "新增",
    confirmDelete: "确定要删除这个存储配置吗？",
    ossName: "阿里云 OSS",
    s3Name: "亚马逊 S3",
    r2Name: "Cloudflare R2",
    minioName: "MinIO",
    localfsName: "服务器本地存储",
    webdavName: "WebDAV",
    accountId: "账户ID Account ID（R2）",

    bucketName: "存储桶名称",
    accessKeyId: "AccessKey ID",
    accessKeySecret: "AccessKey Secret",
    customPath: "自定义保存路径",
    accessUrlPrefix: "访问地址前缀",
    webUser: "WebDAV 用户名",
    webPassword: "WebDAV 密码",
    webUrl: "WebDAV 地址",
    isEnabled: "已启用",

    logout: "注销",
    close: "关闭",
    cancel: "取消",
    confirm: "确定",
    success: "成功",
    error: "错误",
    warning: "警告",
    info: "信息",
    tableScrollsShowMore: "提示：左右滚动表格显示更多, 最多100条",
    copyConfig: "复制 API 配置",
    copyConfigSuccess: "API 配置信息 已复制 到剪贴板, 请返回 obsidian 插件粘贴配置",
    copyConfigError: "剪贴板 API 不可用, 请手动复制并返回 obsidian 插件粘贴配置",
    credentialsRequired: "用户名（或邮箱）不能为空",
    passwordMinLength: "密码至少需要6个字符",
    usernameMinLength: "用户名至少3个字符",
    emailInvalid: "请输入有效的邮箱地址",
    passwordMismatch: "两次输入的密码不一致",
    oss: "OSS",
    s3: "S3",
    r2: "R2",
    minio: "MinIO",
    localfs: "Local",
    ossDesc: "阿里云 OSS 云存储",
    s3Desc: "亚马逊 S3 云存储",
    r2Desc: "Cloudflare R2 云存储",
    minioDesc: "MinIO 云存储",
    localfsDesc: "服务器本地存储",
    changePassword: "修改密码",
    currentPassword: "当前密码",
    newPassword: "新密码",
    confirmNewPassword: "确认密码",
  },
}

i18n.use(initReactI18next).init({
  resources: {
    en: {
      translation: translations.en,
    },
    zh: {
      translation: translations.zh,
    },
  },
  lng: getBrowserLang(), // 默认语言为英文
  fallbackLng: "zh",
  interpolation: {
    escapeValue: false, // react 已经安全地处理了 HTML 转义
  },
})



export default i18n
